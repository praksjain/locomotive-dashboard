{"ast":null,"code":"import { updateSimulation } from '../store/simulationSlice';\nexport class WebSocketService {\n  constructor(dispatch) {\n    this.ws = null;\n    this.dispatch = void 0;\n    this.isConnecting = false;\n    this.dispatch = dispatch;\n  }\n  connect() {\n    if (this.isConnecting) return;\n    this.isConnecting = true;\n    console.log('Connecting to WebSocket...');\n    this.ws = new WebSocket('ws://localhost:8000/ws');\n    this.ws.onopen = () => {\n      console.log('WebSocket Connected');\n      this.isConnecting = false;\n    };\n    this.ws.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        console.log('Received from server:', data);\n        this.dispatch(updateSimulation(data));\n      } catch (error) {\n        console.error('Error processing message:', error);\n      }\n    };\n    this.ws.onerror = error => {\n      console.error('WebSocket Error:', error);\n      this.isConnecting = false;\n    };\n    this.ws.onclose = () => {\n      console.log('WebSocket Disconnected');\n      this.isConnecting = false;\n      setTimeout(() => this.connect(), 1000);\n    };\n  }\n  sendUpdate(data) {\n    if (!this.ws || this.ws.readyState !== WebSocket.OPEN) {\n      console.warn('WebSocket not ready, attempting to reconnect...');\n      this.connect();\n      return;\n    }\n    try {\n      const message = JSON.stringify(data);\n      console.log('Sending to server:', data);\n      this.ws.send(message);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  }\n  disconnect() {\n    if (this.ws) {\n      this.ws.close();\n    }\n  }\n}","map":{"version":3,"names":["updateSimulation","WebSocketService","constructor","dispatch","ws","isConnecting","connect","console","log","WebSocket","onopen","onmessage","event","data","JSON","parse","error","onerror","onclose","setTimeout","sendUpdate","readyState","OPEN","warn","message","stringify","send","disconnect","close"],"sources":["/Users/apple/Documents/Prakhar/Projects/locomotive-simulator/frontend/src/services/WebSocketService.ts"],"sourcesContent":["import { AppDispatch } from '../store';\nimport { updateSimulation } from '../store/simulationSlice';\n\nexport class WebSocketService {\n  private ws: WebSocket | null = null;\n  private dispatch: any;\n  private isConnecting: boolean = false;\n\n  constructor(dispatch: any) {\n    this.dispatch = dispatch;\n  }\n\n  connect() {\n    if (this.isConnecting) return;\n    this.isConnecting = true;\n\n    console.log('Connecting to WebSocket...');\n    this.ws = new WebSocket('ws://localhost:8000/ws');\n    \n    this.ws.onopen = () => {\n      console.log('WebSocket Connected');\n      this.isConnecting = false;\n    };\n\n    this.ws.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        console.log('Received from server:', data);\n        this.dispatch(updateSimulation(data));\n      } catch (error) {\n        console.error('Error processing message:', error);\n      }\n    };\n\n    this.ws.onerror = (error) => {\n      console.error('WebSocket Error:', error);\n      this.isConnecting = false;\n    };\n\n    this.ws.onclose = () => {\n      console.log('WebSocket Disconnected');\n      this.isConnecting = false;\n      setTimeout(() => this.connect(), 1000);\n    };\n  }\n\n  sendUpdate(data: any) {\n    if (!this.ws || this.ws.readyState !== WebSocket.OPEN) {\n      console.warn('WebSocket not ready, attempting to reconnect...');\n      this.connect();\n      return;\n    }\n\n    try {\n      const message = JSON.stringify(data);\n      console.log('Sending to server:', data);\n      this.ws.send(message);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  }\n\n  disconnect() {\n    if (this.ws) {\n      this.ws.close();\n    }\n  }\n} "],"mappings":"AACA,SAASA,gBAAgB,QAAQ,0BAA0B;AAE3D,OAAO,MAAMC,gBAAgB,CAAC;EAK5BC,WAAWA,CAACC,QAAa,EAAE;IAAA,KAJnBC,EAAE,GAAqB,IAAI;IAAA,KAC3BD,QAAQ;IAAA,KACRE,YAAY,GAAY,KAAK;IAGnC,IAAI,CAACF,QAAQ,GAAGA,QAAQ;EAC1B;EAEAG,OAAOA,CAAA,EAAG;IACR,IAAI,IAAI,CAACD,YAAY,EAAE;IACvB,IAAI,CAACA,YAAY,GAAG,IAAI;IAExBE,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACzC,IAAI,CAACJ,EAAE,GAAG,IAAIK,SAAS,CAAC,wBAAwB,CAAC;IAEjD,IAAI,CAACL,EAAE,CAACM,MAAM,GAAG,MAAM;MACrBH,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClC,IAAI,CAACH,YAAY,GAAG,KAAK;IAC3B,CAAC;IAED,IAAI,CAACD,EAAE,CAACO,SAAS,GAAIC,KAAK,IAAK;MAC7B,IAAI;QACF,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;QACnCN,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEK,IAAI,CAAC;QAC1C,IAAI,CAACV,QAAQ,CAACH,gBAAgB,CAACa,IAAI,CAAC,CAAC;MACvC,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdT,OAAO,CAACS,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAED,IAAI,CAACZ,EAAE,CAACa,OAAO,GAAID,KAAK,IAAK;MAC3BT,OAAO,CAACS,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxC,IAAI,CAACX,YAAY,GAAG,KAAK;IAC3B,CAAC;IAED,IAAI,CAACD,EAAE,CAACc,OAAO,GAAG,MAAM;MACtBX,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrC,IAAI,CAACH,YAAY,GAAG,KAAK;MACzBc,UAAU,CAAC,MAAM,IAAI,CAACb,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC;IACxC,CAAC;EACH;EAEAc,UAAUA,CAACP,IAAS,EAAE;IACpB,IAAI,CAAC,IAAI,CAACT,EAAE,IAAI,IAAI,CAACA,EAAE,CAACiB,UAAU,KAAKZ,SAAS,CAACa,IAAI,EAAE;MACrDf,OAAO,CAACgB,IAAI,CAAC,iDAAiD,CAAC;MAC/D,IAAI,CAACjB,OAAO,CAAC,CAAC;MACd;IACF;IAEA,IAAI;MACF,MAAMkB,OAAO,GAAGV,IAAI,CAACW,SAAS,CAACZ,IAAI,CAAC;MACpCN,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEK,IAAI,CAAC;MACvC,IAAI,CAACT,EAAE,CAACsB,IAAI,CAACF,OAAO,CAAC;IACvB,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF;EAEAW,UAAUA,CAAA,EAAG;IACX,IAAI,IAAI,CAACvB,EAAE,EAAE;MACX,IAAI,CAACA,EAAE,CAACwB,KAAK,CAAC,CAAC;IACjB;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}