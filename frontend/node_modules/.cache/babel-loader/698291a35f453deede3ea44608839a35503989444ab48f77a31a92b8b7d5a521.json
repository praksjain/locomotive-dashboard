{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/Prakhar/Projects/locomotive-simulator/frontend/src/components/TrainCabin.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { useDispatch } from 'react-redux';\nimport { setSpeed } from '../store/speedSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrainCabin = () => {\n  _s();\n  const containerRef = useRef(null);\n  const throttleRef = useRef();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!containerRef.current) return;\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x87ceeb); // Sky blue background\n\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.shadowMap.enabled = true;\n    containerRef.current.appendChild(renderer.domElement);\n\n    // Add lights\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(5, 5, 5);\n    directionalLight.castShadow = true;\n    scene.add(directionalLight);\n\n    // Add controls\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n\n    // Load train cabin model\n    const loader = new GLTFLoader();\n    loader.load(\"/assets/train_cabin.glb\", gltf => {\n      scene.add(gltf.scene);\n      // Find throttle lever in the model\n      throttleRef.current = gltf.scene.getObjectByName(\"throttle_lever\");\n    });\n\n    // Add control panel\n    const controlPanel = new THREE.Mesh(new THREE.BoxGeometry(2, 1, 0.1), new THREE.MeshPhongMaterial({\n      color: 0x333333\n    }));\n    controlPanel.position.set(0, -1, -2);\n    scene.add(controlPanel);\n    camera.position.set(0, 1.6, 0); // Eye level\n\n    // Handle throttle movement\n    let speed = 0;\n    const handleThrottle = event => {\n      if (!throttleRef.current) return;\n      if (event.key === 'ArrowUp' && speed < 100) {\n        speed += 5;\n        throttleRef.current.rotation.x += 0.1;\n      } else if (event.key === 'ArrowDown' && speed > 0) {\n        speed -= 5;\n        throttleRef.current.rotation.x -= 0.1;\n      }\n      dispatch(setSpeed(speed));\n    };\n    window.addEventListener('keydown', handleThrottle);\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('keydown', handleThrottle);\n      renderer.dispose();\n    };\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: {\n      width: '100vw',\n      height: '100vh'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 12\n  }, this);\n};\n_s(TrainCabin, \"GVuD4UHc11w3iJWY6Uml5sQnFTg=\", false, function () {\n  return [useDispatch];\n});\n_c = TrainCabin;\nexport default TrainCabin;\nvar _c;\n$RefreshReg$(_c, \"TrainCabin\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","GLTFLoader","OrbitControls","useDispatch","setSpeed","jsxDEV","_jsxDEV","TrainCabin","_s","containerRef","throttleRef","dispatch","current","scene","Scene","background","Color","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","antialias","setSize","shadowMap","enabled","appendChild","domElement","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","position","set","castShadow","controls","enableDamping","dampingFactor","loader","load","gltf","getObjectByName","controlPanel","Mesh","BoxGeometry","MeshPhongMaterial","color","speed","handleThrottle","event","key","rotation","x","addEventListener","animate","requestAnimationFrame","update","render","removeEventListener","dispose","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/apple/Documents/Prakhar/Projects/locomotive-simulator/frontend/src/components/TrainCabin.tsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { useDispatch } from 'react-redux';\nimport { setSpeed } from '../store/speedSlice';\n\nconst TrainCabin: React.FC = () => {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const throttleRef = useRef<THREE.Object3D>();\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n        if (!containerRef.current) return;\n\n        const scene = new THREE.Scene();\n        scene.background = new THREE.Color(0x87ceeb); // Sky blue background\n        \n        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n        const renderer = new THREE.WebGLRenderer({ antialias: true });\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.shadowMap.enabled = true;\n        containerRef.current.appendChild(renderer.domElement);\n\n        // Add lights\n        const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n        scene.add(ambientLight);\n        \n        const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n        directionalLight.position.set(5, 5, 5);\n        directionalLight.castShadow = true;\n        scene.add(directionalLight);\n\n        // Add controls\n        const controls = new OrbitControls(camera, renderer.domElement);\n        controls.enableDamping = true;\n        controls.dampingFactor = 0.05;\n\n        // Load train cabin model\n        const loader = new GLTFLoader();\n        loader.load(\"/assets/train_cabin.glb\", (gltf) => {\n            scene.add(gltf.scene);\n            // Find throttle lever in the model\n            throttleRef.current = gltf.scene.getObjectByName(\"throttle_lever\");\n        });\n\n        // Add control panel\n        const controlPanel = new THREE.Mesh(\n            new THREE.BoxGeometry(2, 1, 0.1),\n            new THREE.MeshPhongMaterial({ color: 0x333333 })\n        );\n        controlPanel.position.set(0, -1, -2);\n        scene.add(controlPanel);\n\n        camera.position.set(0, 1.6, 0); // Eye level\n        \n        // Handle throttle movement\n        let speed = 0;\n        const handleThrottle = (event: KeyboardEvent) => {\n            if (!throttleRef.current) return;\n            \n            if (event.key === 'ArrowUp' && speed < 100) {\n                speed += 5;\n                throttleRef.current.rotation.x += 0.1;\n            } else if (event.key === 'ArrowDown' && speed > 0) {\n                speed -= 5;\n                throttleRef.current.rotation.x -= 0.1;\n            }\n            \n            dispatch(setSpeed(speed));\n        };\n\n        window.addEventListener('keydown', handleThrottle);\n\n        const animate = () => {\n            requestAnimationFrame(animate);\n            controls.update();\n            renderer.render(scene, camera);\n        };\n\n        animate();\n\n        // Cleanup\n        return () => {\n            window.removeEventListener('keydown', handleThrottle);\n            renderer.dispose();\n        };\n    }, [dispatch]);\n\n    return <div ref={containerRef} style={{ width: '100vw', height: '100vh' }} />;\n};\n\nexport default TrainCabin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}