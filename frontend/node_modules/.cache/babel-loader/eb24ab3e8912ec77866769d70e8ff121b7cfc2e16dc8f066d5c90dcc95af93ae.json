{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport * as THREE from 'three';\nconst WeatherEffects = ({\n  scene\n}) => {\n  _s();\n  useEffect(() => {\n    // Rain effect\n    const rainGeometry = new THREE.BufferGeometry();\n    const rainCount = 15000;\n    const positions = new Float32Array(rainCount * 3);\n    for (let i = 0; i < rainCount * 3; i += 3) {\n      positions[i] = Math.random() * 400 - 200;\n      positions[i + 1] = Math.random() * 500;\n      positions[i + 2] = Math.random() * 400 - 200;\n    }\n    rainGeometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n    const rainMaterial = new THREE.PointsMaterial({\n      color: 0xaaaaaa,\n      size: 0.1,\n      transparent: true\n    });\n    const rain = new THREE.Points(rainGeometry, rainMaterial);\n    scene.add(rain);\n\n    // Animation\n    const animateRain = () => {\n      const positions = rain.geometry.attributes.position.array;\n      for (let i = 0; i < positions.length; i += 3) {\n        positions[i + 1] -= 1.5;\n        if (positions[i + 1] < 0) {\n          positions[i + 1] = 500;\n        }\n      }\n      rain.geometry.attributes.position.needsUpdate = true;\n      requestAnimationFrame(animateRain);\n    };\n    animateRain();\n    return () => {\n      scene.remove(rain);\n    };\n  }, [scene]);\n  return null;\n};\n_s(WeatherEffects, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = WeatherEffects;\nexport default WeatherEffects;\nvar _c;\n$RefreshReg$(_c, \"WeatherEffects\");","map":{"version":3,"names":["useEffect","THREE","WeatherEffects","scene","_s","rainGeometry","BufferGeometry","rainCount","positions","Float32Array","i","Math","random","setAttribute","BufferAttribute","rainMaterial","PointsMaterial","color","size","transparent","rain","Points","add","animateRain","geometry","attributes","position","array","length","needsUpdate","requestAnimationFrame","remove","_c","$RefreshReg$"],"sources":["/Users/apple/Documents/Prakhar/Projects/locomotive-simulator/frontend/src/components/WeatherEffects.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport * as THREE from 'three';\n\ninterface Props {\n    scene: THREE.Scene;\n}\n\nconst WeatherEffects: React.FC<Props> = ({ scene }) => {\n    useEffect(() => {\n        // Rain effect\n        const rainGeometry = new THREE.BufferGeometry();\n        const rainCount = 15000;\n        const positions = new Float32Array(rainCount * 3);\n        \n        for (let i = 0; i < rainCount * 3; i += 3) {\n            positions[i] = Math.random() * 400 - 200;\n            positions[i + 1] = Math.random() * 500;\n            positions[i + 2] = Math.random() * 400 - 200;\n        }\n        \n        rainGeometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n        \n        const rainMaterial = new THREE.PointsMaterial({\n            color: 0xaaaaaa,\n            size: 0.1,\n            transparent: true\n        });\n        \n        const rain = new THREE.Points(rainGeometry, rainMaterial);\n        scene.add(rain);\n        \n        // Animation\n        const animateRain = () => {\n            const positions = (rain.geometry.attributes.position as THREE.BufferAttribute).array;\n            for (let i = 0; i < positions.length; i += 3) {\n                positions[i + 1] -= 1.5;\n                if (positions[i + 1] < 0) {\n                    positions[i + 1] = 500;\n                }\n            }\n            rain.geometry.attributes.position.needsUpdate = true;\n            requestAnimationFrame(animateRain);\n        };\n        \n        animateRain();\n        \n        return () => {\n            scene.remove(rain);\n        };\n    }, [scene]);\n    \n    return null;\n};\n\nexport default WeatherEffects; "],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAM9B,MAAMC,cAA+B,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACnDJ,SAAS,CAAC,MAAM;IACZ;IACA,MAAMK,YAAY,GAAG,IAAIJ,KAAK,CAACK,cAAc,CAAC,CAAC;IAC/C,MAAMC,SAAS,GAAG,KAAK;IACvB,MAAMC,SAAS,GAAG,IAAIC,YAAY,CAACF,SAAS,GAAG,CAAC,CAAC;IAEjD,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,SAAS,GAAG,CAAC,EAAEG,CAAC,IAAI,CAAC,EAAE;MACvCF,SAAS,CAACE,CAAC,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;MACxCJ,SAAS,CAACE,CAAC,GAAG,CAAC,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;MACtCJ,SAAS,CAACE,CAAC,GAAG,CAAC,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;IAChD;IAEAP,YAAY,CAACQ,YAAY,CAAC,UAAU,EAAE,IAAIZ,KAAK,CAACa,eAAe,CAACN,SAAS,EAAE,CAAC,CAAC,CAAC;IAE9E,MAAMO,YAAY,GAAG,IAAId,KAAK,CAACe,cAAc,CAAC;MAC1CC,KAAK,EAAE,QAAQ;MACfC,IAAI,EAAE,GAAG;MACTC,WAAW,EAAE;IACjB,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,IAAInB,KAAK,CAACoB,MAAM,CAAChB,YAAY,EAAEU,YAAY,CAAC;IACzDZ,KAAK,CAACmB,GAAG,CAACF,IAAI,CAAC;;IAEf;IACA,MAAMG,WAAW,GAAGA,CAAA,KAAM;MACtB,MAAMf,SAAS,GAAIY,IAAI,CAACI,QAAQ,CAACC,UAAU,CAACC,QAAQ,CAA2BC,KAAK;MACpF,KAAK,IAAIjB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,CAACoB,MAAM,EAAElB,CAAC,IAAI,CAAC,EAAE;QAC1CF,SAAS,CAACE,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG;QACvB,IAAIF,SAAS,CAACE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;UACtBF,SAAS,CAACE,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG;QAC1B;MACJ;MACAU,IAAI,CAACI,QAAQ,CAACC,UAAU,CAACC,QAAQ,CAACG,WAAW,GAAG,IAAI;MACpDC,qBAAqB,CAACP,WAAW,CAAC;IACtC,CAAC;IAEDA,WAAW,CAAC,CAAC;IAEb,OAAO,MAAM;MACTpB,KAAK,CAAC4B,MAAM,CAACX,IAAI,CAAC;IACtB,CAAC;EACL,CAAC,EAAE,CAACjB,KAAK,CAAC,CAAC;EAEX,OAAO,IAAI;AACf,CAAC;AAACC,EAAA,CA7CIF,cAA+B;AAAA8B,EAAA,GAA/B9B,cAA+B;AA+CrC,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}